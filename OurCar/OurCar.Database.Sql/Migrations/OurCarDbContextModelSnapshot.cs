// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OurCar.Database.Sql;

namespace OurCar.Database.Sql.Migrations
{
    [DbContext(typeof(OurCarDbContext))]
    partial class OurCarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OurCar.Entity.Car", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("OurCar.Entity.CarDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ManufaturingYear")
                        .HasColumnType("int");

                    b.Property<string>("SafetyDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarDetail");
                });

            modelBuilder.Entity("OurCar.Entity.CarKeyHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarSharedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("SecurityCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SecurityStatusCode")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarSharedId");

                    b.ToTable("CarKeyHolder");
                });

            modelBuilder.Entity("OurCar.Entity.CarMedia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailId");

                    b.ToTable("CarMedia");
                });

            modelBuilder.Entity("OurCar.Entity.CarShared", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentKeyHolderUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<int>("LimitedToPeople")
                        .HasColumnType("int");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdateStatusUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailId")
                        .IsUnique();

                    b.ToTable("CarShared");
                });

            modelBuilder.Entity("OurCar.Entity.CarSharedMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarSharedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RequestedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarSharedId");

                    b.ToTable("CarSharedMember");
                });

            modelBuilder.Entity("OurCar.Entity.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemGroup")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LookupItem");
                });

            modelBuilder.Entity("OurCar.Entity.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentKey")
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("MediaName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("MediaTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessStatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("OurCar.Entity.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ValidityInMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("OurCar.Entity.SubscriptionCarShared", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarSharedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarSharedId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionCarShared");
                });

            modelBuilder.Entity("OurCar.Entity.SubscriptionPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionPayment");
                });

            modelBuilder.Entity("OurCar.Entity.Car", b =>
                {
                    b.HasOne("OurCar.Entity.LookupItem", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .IsRequired();

                    b.HasOne("OurCar.Entity.LookupItem", "CarType")
                        .WithMany("Cars")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_Car_LookupItem_CarType_Id")
                        .IsRequired();

                    b.Navigation("CarType");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OurCar.Entity.CarDetail", b =>
                {
                    b.HasOne("OurCar.Entity.Car", "Car")
                        .WithMany("CarDetails")
                        .HasForeignKey("CarId")
                        .IsRequired();

                    b.HasOne("OurCar.Entity.LookupItem", "InsuranceType")
                        .WithMany("CarDetails")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_CarDetail_LookupItem_InsuranceType_Id")
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("InsuranceType");
                });

            modelBuilder.Entity("OurCar.Entity.CarKeyHolder", b =>
                {
                    b.HasOne("OurCar.Entity.CarShared", "CarShared")
                        .WithMany("CarKeyHolders")
                        .HasForeignKey("CarSharedId")
                        .IsRequired();

                    b.Navigation("CarShared");
                });

            modelBuilder.Entity("OurCar.Entity.CarMedia", b =>
                {
                    b.HasOne("OurCar.Entity.CarDetail", "CarDetail")
                        .WithMany("CarMedias")
                        .HasForeignKey("CarDetailId")
                        .IsRequired();

                    b.HasOne("OurCar.Entity.Media", "Media")
                        .WithMany("CarMedias")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_CarMedia_Media_Id")
                        .IsRequired();

                    b.Navigation("CarDetail");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("OurCar.Entity.CarShared", b =>
                {
                    b.HasOne("OurCar.Entity.CarDetail", "CarDetail")
                        .WithOne("CarShared")
                        .HasForeignKey("OurCar.Entity.CarShared", "CarDetailId")
                        .IsRequired();

                    b.Navigation("CarDetail");
                });

            modelBuilder.Entity("OurCar.Entity.CarSharedMember", b =>
                {
                    b.HasOne("OurCar.Entity.CarShared", "CarShared")
                        .WithMany("CarSharedMembers")
                        .HasForeignKey("CarSharedId")
                        .IsRequired();

                    b.Navigation("CarShared");
                });

            modelBuilder.Entity("OurCar.Entity.SubscriptionCarShared", b =>
                {
                    b.HasOne("OurCar.Entity.CarShared", "CarShared")
                        .WithMany()
                        .HasForeignKey("CarSharedId")
                        .IsRequired();

                    b.HasOne("OurCar.Entity.Subscription", "Subscription")
                        .WithMany("SubscriptionCarShareds")
                        .HasForeignKey("SubscriptionId")
                        .IsRequired();

                    b.Navigation("CarShared");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("OurCar.Entity.SubscriptionPayment", b =>
                {
                    b.HasOne("OurCar.Entity.Subscription", "Subscription")
                        .WithMany("SubscriptionPayments")
                        .HasForeignKey("SubscriptionId")
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("OurCar.Entity.Car", b =>
                {
                    b.Navigation("CarDetails");
                });

            modelBuilder.Entity("OurCar.Entity.CarDetail", b =>
                {
                    b.Navigation("CarMedias");

                    b.Navigation("CarShared");
                });

            modelBuilder.Entity("OurCar.Entity.CarShared", b =>
                {
                    b.Navigation("CarKeyHolders");

                    b.Navigation("CarSharedMembers");
                });

            modelBuilder.Entity("OurCar.Entity.LookupItem", b =>
                {
                    b.Navigation("CarDetails");

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("OurCar.Entity.Media", b =>
                {
                    b.Navigation("CarMedias");
                });

            modelBuilder.Entity("OurCar.Entity.Subscription", b =>
                {
                    b.Navigation("SubscriptionCarShareds");

                    b.Navigation("SubscriptionPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
